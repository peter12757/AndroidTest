// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from audio.djinni

#import "TXSAudioApi+Private.h"
#import "TXSAudioApi.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface TXSAudioApi ()

- (id)initWithCpp:(const std::shared_ptr<::textsort::AudioApi>&)cppRef;

@end

@implementation TXSAudioApi {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::textsort::AudioApi>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::textsort::AudioApi>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (int32_t)startAudiorecord:(int32_t)audioSource
             sampleRateInHz:(int32_t)sampleRateInHz
              channelConfig:(int32_t)channelConfig
                audioFormat:(int32_t)audioFormat
          bufferSizeInBytes:(int32_t)bufferSizeInBytes {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->start_audiorecord(::djinni::I32::toCpp(audioSource),
                                                                     ::djinni::I32::toCpp(sampleRateInHz),
                                                                     ::djinni::I32::toCpp(channelConfig),
                                                                     ::djinni::I32::toCpp(audioFormat),
                                                                     ::djinni::I32::toCpp(bufferSizeInBytes));
        return ::djinni::I32::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int32_t)stopAudiorecord {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->stop_audiorecord();
        return ::djinni::I32::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto AudioApi::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto AudioApi::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<TXSAudioApi>(cpp);
}

}  // namespace djinni_generated

@end
